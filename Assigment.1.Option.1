"""
Assignment 1
"""

"""
For "Assignment 1" I have come up with two possible
solutions, identified by "Option 1" and "Option 2".
"""

"""
Option 1
"""


import numpy as np
import matplotlib.pyplot as plt


def sincos_option1():

    xop1 = np.linspace(0, 2 * np.pi, num=500)
    y1op1 = np.sin(xop1)
    y2op1 = np.cos(xop1)

    plt.plot(xop1, y1op1, "green", label="Sine Function")
    plt.plot(xop1, y2op1, "orange", label="Cosine Function")
    plt.grid("True")
    plt.title("Graph of One Period of Sine and Cosine functions", fontsize=15)
    plt.xlabel("x")
    plt.ylabel("sin(x) and cos(x)")
    plt.legend()
    plt.show()


if __name__ == "__main__":
    sincos_option1()


"""

Comment

First I import "numpy" and "matplotlib.pyplot".
I then use "def()" to define the functions of "Option 1" and of "Option 2"
and I also generate the values of "x", identified by "xop1" in "Option 1"
and by "xop2" in "Option 2". I create "xop1" in "Option 1" and "xop2"
in "Option 2" by using different methods. To this regard, in fact, I create
"xop1" by using "np.linspace()" and by including in the brackets "0", which
is the starting point, "2*np.pi", since I am interested in representing just
one period of the Sine and Cosine functions, and "num=500", which represents
the number of samples that have to be generated. For "Option 2", instead, I
use "np.arange()" to create "xop2" and I include "0", which is the
starting point, "2*np.pi", since I am interested in representing just one
period of the Sine and Cosine functions, and "step=0.001".
Furthermore, for both "Option 1" and "Option 2" I use "np.sin()" to take
into consideration the Sine function (I thus create "y1op1" and "y1op2")
and also "np.cos()" to take into consideration the Cosine function (I thus
create "y2op1" and "y2op2").
Moreover, I use "plt.plot()" to plot "xop1" and "y1op1" in "Option 1" and
"xop2" and "y1op2" in "Option 2" and then I use again "plt.plot()" to plot
"xop1" and "y2op1" in "Option 1" and "xop2" and "y2op2" in "Option 2"; I
also select the colors for "y1op1", "y2op1", "y1op2" and "y2op2" and I
also add the corresponding labels.
In addition to this, I also use "plt.grid()" and include "True" in the
brackets to display the grid in the plot, "plt.title()" to add the
title (I also select the "fontsize"), "plt.xlabel()" to give a name to
the "x-axis", "plt.ylabel()" to give a name to the "y-axis",
"plt.legend()" to display the legend and "plt.show()" to display the
graphs.
Furthermore, I use "if __name__ == "__main__":" and I also include
"sincos_option1()" in "Option 1" and "sincos_option2()" in "Option 2".
Lastly, I type "black" in the terminal followed by the path of the
file in ".py format" in order to format the whole code contained in the
file taken into consideration (basically the code of the file you are
reading and so the code of the file in ".py format" named
"Assignment.1.Option.1").

"""
